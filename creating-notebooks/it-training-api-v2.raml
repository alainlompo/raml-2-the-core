#%RAML 0.8
title: IT Training Ordering Service
version: 1.0-Development
#baseUri: http://www.it-trainings.com/api
baseUri: http://mocksvc.mulesoft.com/mocks/169d6e4f-4604-4f16-ad9b-89a20c0fb6e9/api
/products:
  displayName: Products
  get:
    description: gets the collection of training products
    responses:
       200:
        body:
          application/json:
            example: |
              [
                {
                  "productCode": "JLM",
                  "duration": "5 days",
                  "description": "Java language mastery",
                  "prerequisite": "Level 2"
                },
                {
                  "productCode": "JWC",
                  "duration": "5 days",
                  "description": "Java Web Components",
                  "prerequisite": "Level 2"
                }
              ]
/orders:
  displayName: Orders
  post:
    description: Places a new training order
    body:
      application/json:
        example: |
          {
            "duration": "5 days",
            "email": "customer_rh@mail.com",
            "name": "Haroun Errashad",
            "address1": "77 Geary St.",
            "address2": "Apt 7",
            "city": "San Francisco",
            "stateOrProvince": "CA",
            "country": "US",
            "postalCode": "94131"
          }
        schema: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "http://jsonschema.net",
            "required": true,
            "properties": {
              "address1": {
                  "type": "string",
                  "id": "http://jsonschema.net/address1",
                  "required": true
              },
              "address2": {
                  "type": "string",
                  "id": "http://jsonschema.net/address2",
                  "required": true
              },
              "city": {
                  "type": "string",
                  "id": "http://jsonschema.net/city",
                  "required": true
              },
              "country": {
                  "type": "string",
                  "id": "http://jsonschema.net/country",
                  "required": true
              },
              "email": {
                  "type": "string",
                  "format": "email",
                  "id": "http://jsonschema.net/email",
                  "required": true
              },
              "name": {
                  "type": "string",
                  "id": "http://jsonschema.net/name",
                  "required": true
              },
              "duration": {
                  "type": "string",
                  "enum": ["2 days", "3 days", "5 days", "1 month", "3 months"],
                  "id": "http://jsonschema.net/duration",
                  "required": true
              },
              "stateOrProvince": {
                  "type": "string",
                  "id": "http://jsonschema.net/stateOrProvince",
                  "required": true
              },
              "postalCode": {
                "type": "string",
                "id": "http://jsonschema.net/postalCode",
                "required": true
              }
            }
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "orderId": "3585"
              }
      500:
        body:
          application/json:
            example: |
              {
                "errorMessage": "The order couldn't be entered."
              }
  /{orderId}/status:
    displayName: Status
    get:
      description: Get the status of an existing order
      queryParameters:
        email:
          description: Retrieve the status of an order with the same email that was used to place the order.
          pattern: ^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$
          required: true
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "orderId": "4321",
                  "status": "Delivered",
                  "duration": "5 days"
                }
        400:
          body:
            application/json:
              example: |
                {
                  "message": "The orderId doesn't match the specified e-mail"
                }